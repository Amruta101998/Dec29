Steps for tracking the files using git bash
1) Configure the git hub account
2) initilize the project
3) Add/update the required file which needs to track
4) Set the repo
5) push the code into git hub



git config --global user.username kpagariya
git config --global user.email kunal.pagariya@gmail.com
git config --list

 ls -lir (inode)
total 1
 1125899906847800 -rw-r--r-- 1 Aakarsh 197121 313 Dec 24 10:34 'New Text Document.txt'
30962247438174909 -rw-r--r-- 1 Aakarsh 197121   0 Dec 24 10:23  Hello.java

---------------------------------------------------------------------
Aakarsh@DESKTOP-9IL8J8J MINGW64 ~/git/local-repo-modern
$ ls -i
30962247438174909  Hello.java   1125899906847800 'New Text Document.txt'
-----------------------------------------------------------------------
 touch NewFile.txt (create new file in git command)
------------------------------------------------------------------------------
git init
Initialized empty Git repository in C:/Users/Aakarsh/git/local-repo-modern/.git/
-------------------------------------------------------------------------------------
Aakarsh@DESKTOP-9IL8J8J MINGW64 ~/git/local-repo-modern (master) -----master is main branch
ls -a (all files)
 ./   ../   .git/   Hello.java  'New Text Document.txt'   NewFile.txt

(.) is currrent dirctory & (..) is previous dir

------------------------------------------------------
 cd .git/

Aakarsh@DESKTOP-9IL8J8J MINGW64 ~/git/local-repo-modern/.git (GIT_DIR!)
$ ls -la
total 15
drwxr-xr-x 1 Aakarsh 197121   0 Dec 24 10:44 ./
drwxr-xr-x 1 Aakarsh 197121   0 Dec 24 10:44 ../
-rw-r--r-- 1 Aakarsh 197121  23 Dec 24 10:44 HEAD
-rw-r--r-- 1 Aakarsh 197121 130 Dec 24 10:44 config
-rw-r--r-- 1 Aakarsh 197121  73 Dec 24 10:44 description
drwxr-xr-x 1 Aakarsh 197121   0 Dec 24 10:44 hooks/
drwxr-xr-x 1 Aakarsh 197121   0 Dec 24 10:44 info/
drwxr-xr-x 1 Aakarsh 197121   0 Dec 24 10:44 objects/
drwxr-xr-x 1 Aakarsh 197121   0 Dec 24 10:44 refs/
------------------------------------------------------------
 git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Hello.java
        New Text Document.txt
        NewFile.txt

nothing added to commit but untracked files present (use "git add" to track)
--------------------------------------------------------------
 git init help
Initialized empty Git repository in C:/Users/Aakarsh/git/local-repo-modern/help/.git/

Aakarsh@DESKTOP-9IL8J8J MINGW64 ~/git/local-repo-modern (master)
$ git help init
(goes to google directly to git-init(1))
-----------------------
 git config --help
git config
-------------------------------
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
user.username=Amruta101998
user.email=hulaguramruta325@gmail.com
core.repositoryformatversion=0
core.filemode=false
core.bare=false
core.logallrefupdates=true
core.symlinks=false
core.ignorecase=true
------------------------------------------------------
 $git add Hello.java --->  (it means we are asking git to track the file Hello.java
Once we add the file for tracking the file goto staging area)

Aakarsh@DESKTOP-9IL8J8J MINGW64 ~/git/local-repo-modern (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   Hello.java

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        New Text Document.txt
        NewFile.txt
        help/
-------------------------------------------------------
 git add -A   (adds all file in dir)

Aakarsh@DESKTOP-9IL8J8J MINGW64 ~/git/local-repo-modern (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   Hello.java
        new file:   New Text Document.txt
        new file:   NewFile.txt
-----------------------------------------------------------
******************************************************************************
29DEC 2020
************************************
Download-Pull Upload-Push
$ git init
Initialized empty Git repository in C:/work/my-data/git/dec29/.git/
2) Create some files on local directory
3) check the status
$ git status
4) We moved the files to staging area 
$ git add -A
-A is for all the files in current directory
5) commit into staging 
$ git commit -m "first commit"
-m is for comments/messages 
6) check the logs
$ git log
7) Set the remote repo URL 
$ git remote add origin https://github.com/kpagariya/Dec29.git
8) Push the changes from staging to remote
$ git push -u origin master
All the steps were done on master branch